@startuml

participant Player
participant ChessGame
participant ChessBoard
participant Piece
participant Move

autonumber

Player -> ChessGame: start()
activate ChessGame
ChessGame -> ChessBoard: initialize()
deactivate ChessGame
activate ChessBoard
ChessBoard -> ChessGame: initialized
deactivate ChessBoard
activate ChessGame
ChessGame --> Player: ChessBoard initialized
deactivate ChessGame

loop Gaming
    Player -> ChessGame: makeMove(board, fromSquare, toSquare)
    activate ChessGame
    ChessGame -> ChessBoard: movePiece(fromSquare, toSquare)
    deactivate ChessGame
    activate ChessBoard
    ChessBoard -> Piece: movePiece(fromSquare, toSquare)
    deactivate ChessBoard
    activate Piece
    Piece -> Piece: canMoveTo(fromSquare, toSquare)
    alt isValidMove
        Piece -> Move: moveTo(toSquare)
        deactivate Piece
        activate Move
        Move --> Piece: execute()
        deactivate Move
        activate Piece
        Piece -> ChessGame: hasMoved()
        activate ChessGame
        ChessGame -> ChessBoard: isCheckmate()
        deactivate ChessGame
        activate ChessBoard
        alt isCheckmate
            ChessBoard --> ChessGame: Checkmate
            deactivate ChessBoard
            activate ChessGame
            break
                ChessGame --> Player: Checkmate
            end
        else isNotCheckmate
            ChessGame -> ChessBoard: isStalemate()
            deactivate ChessGame
            activate ChessBoard
            alt isStalemate
                ChessBoard --> ChessGame: Stalemate
                deactivate ChessBoard
                activate ChessGame
                break
                    ChessGame --> Player: Stalemate
                end
            else isNotStalemate
                ChessGame -> ChessBoard: isCheck()
                deactivate ChessGame
                activate ChessBoard
                ChessBoard -> ChessGame: Check
                deactivate ChessBoard
                activate ChessGame
                ChessGame -> ChessGame: switchCurrentPlayer()
                ChessGame --> Player: Move Successful
                deactivate ChessGame
            end
        else isNotValidMove
            Piece -> Player: isNotAValidMove
            deactivate Piece
        end
        deactivate ChessGame
    end
end
@enduml
